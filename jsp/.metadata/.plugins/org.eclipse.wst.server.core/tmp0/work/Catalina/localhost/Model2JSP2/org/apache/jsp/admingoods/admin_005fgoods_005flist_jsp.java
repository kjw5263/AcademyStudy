/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.63
 * Generated at: 2021-06-03 03:02:43 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.admingoods;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.admin.goods.db.GoodsDTO;
import java.util.List;

public final class admin_005fgoods_005flist_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("com.admin.goods.db.GoodsDTO");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<title>2. 상품 목록 페이지</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<h1> WebContent/adminGoods/admin_goods_list.jsp</h1>\r\n");
      out.write("<h2>등록 상품 목록</h2>\r\n");
      out.write("<h3><a href=\"./GoodsAdd.ag\">상품 등록하기</a></h3>\r\n");
      out.write("\r\n");
      out.write("<!-- setAttribute로 받아온(공유된) list 정보 \r\n");
      out.write(" -->\r\n");
      out.write(" \r\n");
      out.write(" ");

 	// 전달된 정보 (공유된 속성)
 	// request.setAttribute("goodsList", goodsList);
 
 	List goodsList = (List)request.getAttribute("goodsList"); // 다운 캐스팅
 
 	
 
      out.write("\r\n");
      out.write(" \r\n");
      out.write("\r\n");
      out.write("<table border=\"1\">\r\n");
      out.write("\r\n");
      out.write("\t<tr>\r\n");
      out.write("\t  <td>번호</td>\r\n");
      out.write("\t  <td>카테고리</td>\r\n");
      out.write("\t  <td>사진</td>\r\n");
      out.write("\t  <td>상품명</td>\r\n");
      out.write("\t  <td>가격</td>\r\n");
      out.write("\t  <td>수량</td>\r\n");
      out.write("\t  <td>등록일자</td>\r\n");
      out.write("\t  <td>수정/삭제</td>\r\n");
      out.write("\t</tr>\r\n");
      out.write("\r\n");
      out.write("\t");
 for(int i= 0; i<goodsList.size(); i++){
		GoodsDTO gdto = (GoodsDTO)goodsList.get(i);
		
		
      out.write("\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\r\n");
      out.write("\t<tr>\r\n");
      out.write("\t  <td>");
      out.print(gdto.getNum() );
      out.write("</td>\r\n");
      out.write("\t  <td>");
      out.print(gdto.getCategory() );
      out.write("</td>\r\n");
      out.write("\t  <td>\r\n");
      out.write("\t  \t<img src=\"./upload/");
      out.print(gdto.getImage().split(",")[0] );
      out.write("\" width=\"50\" height=\"50\">\r\n");
      out.write("\t  </td>\r\n");
      out.write("\t  <td>");
      out.print(gdto.getName() );
      out.write("</td>\r\n");
      out.write("\t  <td>");
      out.print(gdto.getPrice() );
      out.write("</td>\r\n");
      out.write("\t  <td>");
      out.print(gdto.getAmount() );
      out.write("</td>\r\n");
      out.write("\t  <td>");
      out.print(gdto.getDate() );
      out.write("</td>\r\n");
      out.write("\t  <td>\r\n");
      out.write("\t  \t<a href=\"./AdminGoodsModify.ag?num=");
      out.print(gdto.getNum());
      out.write("\">수정</a>/<a href=\"./AdminGoodsDelete.ag?num=");
      out.print(gdto.getNum());
      out.write("\">삭제</a>\r\n");
      out.write("\t  </td>\r\n");
      out.write("\t</tr>\r\n");
      out.write("\t\r\n");
      out.write("\t");
 }
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("</table>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
