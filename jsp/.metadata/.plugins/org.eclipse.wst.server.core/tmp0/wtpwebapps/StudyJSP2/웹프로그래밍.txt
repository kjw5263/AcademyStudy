웹프로그래밍.txt

버퍼링 -> 스트리밍
모든 웹페이지도 데이터의 입력,출력으로 구성

* 통신 프로토콜: http,https 사용
  => 컴퓨터들 사이에서 데이터를 주고 받을때 접속하는 방법,속도,형식에 대한 약속
  
* TCP/IP: 통신 프로토콜의 일종 => 사용하는 방법
  
  애플리케이션 층                      <-(가상의 데이터 송수신)->         애플리케이션 층
  트랜스포트 층(TCP/UDP)                                 트랜스포트 층(TCP/UDP)
  네트워크 층(인터넷/IP)       <-(실제 데이터                                네트워크 층(인터넷/IP)
  데이터링크 층                                                  송수신)->          데이터링크 층
  [com1]                                                 [com2]
  
  
  *애플리케이션 층: 실제 사용되는 인터넷 응용프로그램(크롬, 카카오톡, 멜론..)
  *트랜스포트 층: 데이터전송시 에러 검출/정정
  *네트워크 층: 데이터를 패킷단위로 정확한 위치에 전달
  *데이터링크 층: 렌카드(렌선) 제어 및 데이터 통신을 위한 하드웨어 제어
  
  
  *서버: 정보/서비스를 제공하는 쪽(컴퓨터)
  *클라이언트: 제공받는 쪽(컴퓨터)
  *IP주소: cmd-ipconfig 인터넷 환경에서 컴퓨터를 구분하는 번호(ex 전화번호)
          192.168.2.200 => 4자리 숫자 조합(0~255)으로 생성
    =>[localhost<->127.0.0.1]: 자신의 컴퓨터
  *호스트: 컴퓨터  
  *포트번호: 여러개의 응용프로그램을 구분하는 번호
     tomcat: 8080
     mysql: 3306
     FTP: 21
     => 프로그램 개발시 소켓통신프로그램 생성시
     (5000~이상의 포트번호사용-그전 번호는 이미 사용하여 충돌발생 가능성 높음)
  
  *도메인 주소: 실제 IP주소를 대신해서 사용하는 영문자 주소
  (IP주소, 포트 번호를 알기 힘들기때문)=> 도메인주소는 중복X 나라에서 관리
     다양한 기기가 생겼기 때문에 좀 더 자세하게 IPv6-cmd(ipconfig)

  도메인주소<-DNS(도메인 네임 서비스)->IP주소
 ->서버가 요청한 클라이언트에게 보여준다(웹페이지 실행.png참고)



  *서버와 클라이언트는 정적데이터와 동적데이터를 서로 주고 받는다.
  *정적데이터 : 변화가 없는 정적인 데이터(이미지,html,javascript,css..)
  =>web서버에서 처리(아파치 웹서버)
  
  *동적데이터: 변화가 있는 동적인데이터(DB..)
  =>WAS서버에서 처리(톰캣)



======================================================================
2021.03.23 (화)

  * JSP
  
  ASP .NET(닷넷)  - C#
  PHP			 - C
  JSP			 - Java
  
  * 서블릿 - (Server + Applet)




========================================================================
게시판 만들기 (CRUD)

  (Create)
  - 새글쓰기, 답글, 댓글
  (Read)
  - 글 목록, 글 상세 페이지
  (Update)
  - 글 정보 수정, 답글, 댓글
  (Delete)
  - 글 삭제, 댓글 삭제, 답글 삭제
  
	=> 프로젝트 요구사항 파악 => DB 테이블 생성 => 코드 작성
	
	




















  