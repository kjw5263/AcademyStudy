/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.63
 * Generated at: 2021-04-27 07:37:28 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.board;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.itwillbs.board.BoardDAO;

public final class deletePro_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.itwillbs.board.BoardDAO");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write(" <h1>WebContent/board/deletePro.jsp</h1>\r\n");
      out.write(" \r\n");
      out.write(" ");

 	// 전달정보 저장 - pageNum
 	String pageNum = request.getParameter("pageNum");
 	// 전달정보 저장 - 액션 태그 (자바빈) - num, pass //-> 보드빈으로 하는 이유>??
 	
 	// 
 
      out.write("\r\n");
      out.write(" \r\n");
      out.write(" \r\n");
      out.write(" ");
      com.itwillbs.board.BoardBean delBean = null;
      delBean = (com.itwillbs.board.BoardBean) _jspx_page_context.getAttribute("delBean", javax.servlet.jsp.PageContext.PAGE_SCOPE);
      if (delBean == null){
        delBean = new com.itwillbs.board.BoardBean();
        _jspx_page_context.setAttribute("delBean", delBean, javax.servlet.jsp.PageContext.PAGE_SCOPE);
      }
      out.write('\r');
      out.write('\n');
      out.write(' ');
      org.apache.jasper.runtime.JspRuntimeLibrary.introspect(_jspx_page_context.findAttribute("delBean"), request);
      out.write("\r\n");
      out.write(" \r\n");
      out.write(" \r\n");
      out.write(" ");

 	System.out.println("삭제정보 : " + delBean);
 	
 
 	// BoardDAO 객체 생성
 	BoardDAO bdao = new BoardDAO();
 	// -> 글 정보 사용해서 글 삭제 기능 메서드() deleteBoard(bb)
 	int check = bdao.deleteBoard(delBean);
 	// 처리 결과를 1(정상처리), 0(오류-비밀번호), -1(오류-글없음) 리턴
 	if(check == 1){
 		
      out.write("\r\n");
      out.write(" \t\t  <script type=\"text/javascript\">\r\n");
      out.write(" \t\t  \talert(\"성공적으로 삭제되었습니다.\");\r\n");
      out.write(" \t\t  \tlocation.href=\"list.jsp\";\r\n");
      out.write(" \t\t  </script>\r\n");
      out.write(" \t\t");

 	} else if(check == 0){
 		
      out.write("\r\n");
      out.write("\t\t  <script type=\"text/javascript\">\r\n");
      out.write("\t\t  \talert(\"비밀번호가 맞지 않습니다.\");\r\n");
      out.write("\t\t  \thistory.back();\r\n");
      out.write("\t\t  </script>\r\n");
      out.write("\t\t");

 	} else if(check == -1){
 		
      out.write("\r\n");
      out.write("\t\t  <script type=\"text/javascript\">\r\n");
      out.write("\t\t  \talert(\"해당 글이 존재하지 않습니다.\");\r\n");
      out.write("\t\t  \thistory.back();\r\n");
      out.write("\t\t  </script>\r\n");
      out.write("\t\t");

 	}
 	// 처리 결과에 따른 페이지 이동
 
      out.write("\r\n");
      out.write(" \r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
