/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.63
 * Generated at: 2021-05-06 00:26:23 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class join_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<link href=\"../css/default.css\" rel=\"stylesheet\" type=\"text/css\">\r\n");
      out.write("<link href=\"../css/subpage.css\" rel=\"stylesheet\" type=\"text/css\">\r\n");
      out.write("<!--[if lt IE 9]>\r\n");
      out.write("<script src=\"http://ie7-js.googlecode.com/svn/version/2.1(beta4)/IE9.js\" type=\"text/javascript\"></script>\r\n");
      out.write("<script src=\"http://ie7-js.googlecode.com/svn/version/2.1(beta4)/ie7-squish.js\" type=\"text/javascript\"></script>\r\n");
      out.write("<script src=\"http://html5shim.googlecode.com/svn/trunk/html5.js\" type=\"text/javascript\"></script>\r\n");
      out.write("<![endif]-->\r\n");
      out.write("<!--[if IE 6]>\r\n");
      out.write(" <script src=\"../script/DD_belatedPNG_0.0.8a.js\"></script>\r\n");
      out.write(" <script>\r\n");
      out.write("   /* EXAMPLE */\r\n");
      out.write("   DD_belatedPNG.fix('#wrap');\r\n");
      out.write("   DD_belatedPNG.fix('#main_img');   \r\n");
      out.write("\r\n");
      out.write(" </script>\r\n");
      out.write(" <![endif]-->\r\n");
      out.write(" \r\n");
      out.write(" \r\n");
      out.write(" <script type=\"text/javascript\">\r\n");
      out.write("  function winOpen() {\r\n");
      out.write("\t  //버튼 클릭 시 실행 -> 새창 열기\r\n");
      out.write("\t  \r\n");
      out.write("\t  // alert(\"클릭\");\r\n");
      out.write("\t  \r\n");
      out.write("\t  // id값이 입력되어있는지 없는지 체크\r\n");
      out.write("\t  if (document.fr.id.value == \"\"){\r\n");
      out.write("\t\t  alert(\" 아이디를 입력하세요. \");\r\n");
      out.write("\t\t  document.fr.id.focus();\r\n");
      out.write("\t\t  return;\r\n");
      out.write("\t  }\r\n");
      out.write("\t  \r\n");
      out.write("\t  // 중복체크 할때, 인풋에서 입력한 아이디를 팝업에 가져가는 방법은?\r\n");
      out.write("\t  // html코드의 value값을 가져오기 \r\n");
      out.write("\t  var userid = document.fr.id.value;\r\n");
      out.write("\t  \r\n");
      out.write("\t  \r\n");
      out.write("\t  \r\n");
      out.write("\t  // id값이 있을 때 -> 새창열기 < % =   % > 는 사용할 수 없다. java 코드가 먼저 실행되어버리기 때문이다!\r\n");
      out.write("\t  window.open(\"joinIDCheck.jsp?userid=\"+userid,\"\",\"width=400, height=300 left=500 top=300\");\r\n");
      out.write("  }\r\n");
      out.write(" \r\n");
      out.write(" </script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<div id=\"wrap\">\r\n");
      out.write("\t\t<!-- 헤더들어가는 곳 -->\r\n");
      out.write("\t\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../inc/top.jsp", out, false);
      out.write("\r\n");
      out.write("\t\t<!-- 헤더들어가는 곳 -->\r\n");
      out.write("\r\n");
      out.write("\t\t<!-- 본문들어가는 곳 -->\r\n");
      out.write("\t\t<!-- 본문메인이미지 -->\r\n");
      out.write("\t\t<div id=\"sub_img_member\"></div>\r\n");
      out.write("\t\t<!-- 본문메인이미지 -->\r\n");
      out.write("\t\t<!-- 왼쪽메뉴 -->\r\n");
      out.write("\t\t<nav id=\"sub_menu\">\r\n");
      out.write("\t\t<ul>\r\n");
      out.write("\t\t\t<li><a href=\"#\">Join us</a></li>\r\n");
      out.write("\t\t\t<li><a href=\"#\">Privacy policy</a></li>\r\n");
      out.write("\t\t</ul>\r\n");
      out.write("\t\t</nav>\r\n");
      out.write("\t\t<!-- 왼쪽메뉴 -->\r\n");
      out.write("\t\t<!-- 본문내용 -->\r\n");
      out.write("\t\t<article>\r\n");
      out.write("\t\t<h1>Join Us</h1>\r\n");
      out.write("\t\t<form action=\"\" id=\"join\" name=\"fr\">\r\n");
      out.write("\t\t\t<fieldset>\r\n");
      out.write("\t\t\t\t<legend>Basic Info</legend>\r\n");
      out.write("\t\t\t\t<label>User ID</label> <input type=\"text\" name=\"id\" class=\"id\">\r\n");
      out.write("\t\t\t\t<input type=\"button\" value=\"중복체크\" class=\"dup\" onclick=\"winOpen()\"><br>\r\n");
      out.write("\t\t\t\t<label>Password</label> <input type=\"password\" name=\"pass\"><br>\r\n");
      out.write("\t\t\t\t<label>Retype Password</label> <input type=\"password\" name=\"pass2\"><br>\r\n");
      out.write("\t\t\t\t<label>Name</label> <input type=\"text\" name=\"name\"><br>\r\n");
      out.write("\t\t\t\t<label>E-Mail</label> <input type=\"email\" name=\"email\"><br>\r\n");
      out.write("\t\t\t\t<label>Retype E-Mail</label> <input type=\"email\" name=\"email2\"><br>\r\n");
      out.write("\t\t\t</fieldset>\r\n");
      out.write("\r\n");
      out.write("\t\t\t<fieldset>\r\n");
      out.write("\t\t\t\t<legend>Optional</legend>\r\n");
      out.write("\t\t\t\t<label>Address</label> <input type=\"text\" name=\"address\"><br>\r\n");
      out.write("\t\t\t\t<label>Phone Number</label> <input type=\"text\" name=\"phone\"><br>\r\n");
      out.write("\t\t\t\t<label>Mobile Phone Number</label> <input type=\"text\" name=\"mobile\"><br>\r\n");
      out.write("\t\t\t</fieldset>\r\n");
      out.write("\t\t\t<div class=\"clear\"></div>\r\n");
      out.write("\t\t\t<div id=\"buttons\">\r\n");
      out.write("\t\t\t\t<input type=\"button\" value=\"Submit\" class=\"submit\"> <input\r\n");
      out.write("\t\t\t\t\ttype=\"button\" value=\"Cancel\" class=\"cancel\">\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</form>\r\n");
      out.write("\t\t</article>\r\n");
      out.write("\t\t<!-- 본문내용 -->\r\n");
      out.write("\t\t<!-- 본문들어가는 곳 -->\r\n");
      out.write("\r\n");
      out.write("\t\t<div class=\"clear\"></div>\r\n");
      out.write("\t\t<!-- 푸터들어가는 곳 -->\r\n");
      out.write("\t\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../inc/bottom.jsp", out, false);
      out.write("\r\n");
      out.write("\t\t<!-- 푸터들어가는 곳 -->\r\n");
      out.write("\t</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
